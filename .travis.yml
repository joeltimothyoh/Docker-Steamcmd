language: bash
services: docker

env:
  global:
    - IMAGE_NAME=steamcmd
    - OS=ubuntu
    - OS_VARIANT=16.04
    - OS_VARIANT_ARCHIVE=xenial-20181005
  matrix:
    - VARIANT=minimal
    - VARIANT=git LATEST=true

before_script:
  # Terminate the travis build on any error
  - set -e

  - REPOSITORY="${REGISTRY_NAMESPACE}/${IMAGE_NAME}"

  - echo "${REGISTRY_PASSWORD}" | docker login -u "${REGISTRY_USER}" --password-stdin

script:
  - date
  - if [ -n "${OS_VARIANT_ARCHIVE}" ]; then
      docker pull "${OS}:${OS_VARIANT_ARCHIVE}";
      docker tag "${OS}:${OS_VARIANT_ARCHIVE}" "${OS}:${OS_VARIANT}";
    fi
  - docker pull "${REPOSITORY}:${VARIANT}" || true
  - docker build
      --cache-from "${REPOSITORY}:${VARIANT}"
      -t "${REPOSITORY}:${VARIANT}"
      --label "game_distributor=steamcmd"
      "${VARIANT}/"
  - if [ "$LATEST" = true ]; then
      docker tag "${REPOSITORY}:${VARIANT}" "${REPOSITORY}:latest";
    fi
  - docker inspect "${REPOSITORY}:${VARIANT}" -f '{{.Config.Labels}}';
  - docker images

  # Test the image
  - if [ ! "${NO_TEST}" = true ]; then
      docker run -t --rm "${REPOSITORY}:${VARIANT}" /bin/bash -c "printenv && ls -al && exec steamcmd.sh +login anonymous +quit";
    fi

  - if [ ! "${NO_PUSH}" = true ]; then
      docker push "${REPOSITORY}";
    fi

after_script:
  - docker logout
  - set +e